name: update infrastructure
on: 
  push: 
    branches:
      - 'master'

env:
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: eu-central-1

jobs: 
  linting:
    name: Code Style Check
    runs-on: ubuntu-latest
    container: "hashicorp/terraform:1.4"
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Check formatting
        run: terraform fmt -check --recursive -diff .

  plan:
    name: Create Terraform Plan
    runs-on: ubuntu-latest
    container: "hashicorp/terraform:1.4"
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2 #checkout робить pull репозиторію та гілки, в якому запущений. Таким чином, ми отримуємо доступ до коду.
      - name: Assume role
        run: source assume-role.sh
      - name: Tf init
        run: terraform init
      - name: Run tf plan
        run: terraform plan -input=false -out tfplan
      - name: Upload tf plan as artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    container: "hashicorp/terraform:1.4"
    needs: plan
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2 #checkout робить pull репозиторію та гілки, в якому запущений. Таким чином, ми отримуємо доступ до коду.
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan # if no 'with' then download all artifacts
      - name: Assume role
        run: source assume-role.sh
      - name: Tf init
        run: terraform init
      - name: Tf apply
        run: terraform apply -input=false -lock=true tfplan