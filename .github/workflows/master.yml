name: Main pipeline
on:
  workflow_dispatch:
  push:
  pull_request:
    types: [ reopened ]

env:
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: eu-central-1
  TF_VAR_back_end_lb_zone_id: ${{ vars.BACK_END_LB_ZONE_ID }}
  TF_VAR_front_end_lb_zone_id: ${{ vars.FRONT_END_LB_ZONE_ID }}
  TF_VAR_back_end_lb_dns_name: ${{ vars.BACK_END_LB_DNS_NAME }} 
  TF_VAR_front_end_lb_dns_name: ${{ vars.FRONT_END_LB_DNS_NAME }}
  

jobs: 
  linting:
    name: Code Style Check
    runs-on: ubuntu-latest
    container: "hashicorp/terraform:1.4"
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Check formatting
        run: terraform fmt -check --recursive -diff .

  plan:
    name: Create Terraform Plan
    runs-on: ubuntu-latest
    container: "ghcr.io/latin-ua/docker_images/terraform_pipeline:latest"
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2 #checkout робить pull репозиторію та гілки, в якому запущений. Таким чином, ми отримуємо доступ до коду.
      - name: Run tf plan
        run: |
          source assume-role.sh
          terraform init
          terraform plan -input=false -out tfplan
      - name: Upload tf plan as artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Terraform Apply
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    container: "ghcr.io/latin-ua/docker_images/terraform_pipeline:latest"
    needs:
      - plan
      - linting
    steps: 
      - name: Checkout source code
        uses: actions/checkout@v2 #checkout робить pull репозиторію та гілки, в якому запущений. Таким чином, ми отримуємо доступ до коду.
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan # if no 'with' then download all artifacts
      - name: Tf apply
        run: |
          source assume-role.sh
          terraform init
          terraform apply -input=false -lock=true tfplan